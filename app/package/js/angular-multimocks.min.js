angular.module("scenario",["ui.router"]).provider("multimocksData",function(){var a={},b="_default";this.setMockData=function(b){a=b},this.addMockData=function(b,c){a[b]=c},this.setDefaultScenario=function(a){b=a},this.$get=function(){return{getMockData:function(){return a},getDefaultScenario:function(){return b}}}}).factory("multimocks",["$q","$http","$httpBackend","multimocksData",function(a,b,c,d){var e=function(a,d){var e={"Content-Type":"application/hal+json; charset=utf-8"};if(d.poll){var f=0,g=_.has(d,"pollCount")?d.pollCount:2;c.when(d.httpMethod,d.uri,d.requestData).respond(function(){return g>f?(f++,[204,{},e]):[200,d.response,e]})}else c.when(d.httpMethod,d.uri,d.requestData).respond(d.statusCode,d.response,e);if(d.callInSetup){var h={method:d.httpMethod,url:d.uri};b(h).success(function(){a.resolve()})}else a.resolve()};return{setup:function(b){var c=a.defer(),f=b||d.getDefaultScenario(),g=d.getMockData();if(_.has(g,f)){var h=g[f];_.forOwn(h,function(a){e(c,a)})}else b&&console.log("Mocks not found for: "+b);return c.promise}}}]).config(["$stateProvider",function(a){a.state("scenario",{url:"/scenario/:state/:mock",controller:"scenarioController"})}]).controller("scenarioController",["$state","$stateParams","multimocks",function(a,b,c){_.isUndefined(b.mock)||c.setup(b.mock).then(function(){_.isUndefined(b.state)||a.transitionTo(b.state)})}]).factory("scenarioName",function(){return{extract:function(a){if(-1!==a.indexOf("scenario")){var b=a.slice(1).split("&").map(function(a){return a.split("=")}).filter(function(a){return"scenario"===a[0]});return b[0][1]}return void 0}}}).run(["$window","multimocks","scenarioName",function(a,b,c){b.setup(c.extract(a.location.search))}]);